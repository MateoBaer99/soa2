swagger: '2.0'
info:
  version: '1.0'
  description: Cette API propose la gestion des commandes
  title: APIs de gestion des commandes
  contact:
    name: Universite Toulouse
consumes:
  - application/json
  - application/xml
produces:
  - application/json
  - application/xml    
basePath: /api
tags:
  - name: Gestion des commandes
paths:
  /commandes:
    get:
      tags:
        - Gestion des commandes
      summary: Consultation Commandes
      description: 'Fournit la liste des commandes'
      operationId: getCommandes
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Commande'
            
    post:
      tags:
        - Gestion des commandes
      summary: Creation Commande
      description: 'CrÃ©e une nouvelle commande.Pour le client et les produits des lignes de commande, seuls les identifiants sont nÃ©cessaires, les autres informations si elles sont renseignÃ©es seront ignorÃ©es'
      operationId: creerCommande
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/Commande'
      responses:
        '201':
          description: Created
        '400': 
          description: Echec de crÃ©ation, donnÃ©es invalides          
  '/commandes/{identifiant}':
    get:
      tags:
        - Gestion des commandes
      summary: Consultation d'une commande
      description: 'Fournit les informations de la commande Ã  partir de son identifiant'
      operationId: getCommande
      parameters:
        - name: identifiant
          in: path
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Commande'
        '404':
          description: Identificant commande inconnu
definitions:
  Identifiant:
    type: string
    format: uuid
  Adresse:
    type: object
    required:
      - codePostal
      - commune
    properties:
      numeroVoie:
        type: integer
        format: int32
      typeVoie:
        type: string
        enum:
          - RUE
          - IMPASSE
          - BOULEVARD
          - AVENUE
      nomVoie:
        type: string
      codePostal:
        type: integer
        pattern: '[0-9]{5}'
        minimum: 01000
        exclusiveMinimum: false
      commune:
        type: string
  Client:
    type: object
    required:
      - identifiant
      - nom
    properties:
      identifiant:
        $ref: '#/definitions/Identifiant'
      nom:
        type: string
      adresseLivraison:
        $ref: '#/definitions/Adresse'
      adresseFacturation:
        $ref: '#/definitions/Adresse'
      tel:
        type: string
        pattern: '^(?:0|\(?\+33\)?\s?|0033\s?)[1-79](?:[\.\-\s]?\d\d){4}$'
      mail:
        type: string
        format: email
      vip:
        type: boolean
  Produit:
    type: object
    required:
      - identifiant
      - nom
      - prix
    properties:
      identifiant:
        $ref: '#/definitions/Identifiant'
      nom:
        type: string
      prix:
        type: number
        format: double
      description:
        type: string
      poids:
        type: number
        format: float
  LigneCommande:
    type: object
    required:
      - quantite
      - produit
    properties:
      quantite:
        type: integer
        minimum: 1
        maximum: 20
      produit:
        $ref: '#/definitions/Produit'  
  Commande:
    type: object
    required:
      - identifiant
      - client
      - date
      - lignes
    properties:
      identifiant:
        $ref: '#/definitions/Identifiant'
      client:
        $ref: '#/definitions/Client'
      date:
        type: string
        format: date
      lignes:
        type: array
        items:
          $ref: '#/definitions/LigneCommande'
